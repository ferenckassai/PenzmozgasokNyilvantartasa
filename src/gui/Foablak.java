/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.IModel;
import model.Kategoria;
import model.Penzmozgas;
import model.penzDbModel;

/**
 *
 * @author javaoktatashu //
 */
public class Foablak extends javax.swing.JFrame implements ActionListener {

    private IModel model;
    private List<Penzmozgas> penzmozgasok;
    private Penzmozgas penzmozgas;

    private boolean megse;

    private List<Kategoria> kategoriak;

    private DefaultTableModel dtm;

    private Map<Integer, Penzmozgas> penzmozKiirva;

    private LocalDate from;
    private LocalDate to;

    public Foablak() {
        initComponents();
        penzmozgas = new Penzmozgas();
        setLocationRelativeTo(null);
        setTitle("Pénzmozgások");
        String connURL = "jdbc:mysql://localhost:3306/nyilvantartodb";
        String dbUser = "root";
        String dbPass = "1234";
        try {
            Connection conn = DriverManager.getConnection(connURL, dbUser, dbPass);
            model = new penzDbModel(conn);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex, "Adatbázis hiba", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }
        dtm = (DefaultTableModel) jtTablazat.getModel();
        dtm.addTableModelListener(jtTablazat); //kell majd ez?

        rbGroup.add(rbBev);
        rbGroup.add(rbKiad);
        rbGroup.add(rbOsszes);
        rbOsszes.setSelected(true);
        rbBev.addActionListener(this);
        rbKiad.addActionListener(this);
        rbOsszes.addActionListener(this);

        penzmozKiirva = new HashMap<>();

        kiir();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbGroup = new javax.swing.ButtonGroup();
        jbBezar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTablazat = new javax.swing.JTable();
        rbKiad = new javax.swing.JRadioButton();
        rbBev = new javax.swing.JRadioButton();
        rbOsszes = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfOsszkiad = new javax.swing.JTextField();
        tfOsszbev = new javax.swing.JTextField();
        tfElkOssz = new javax.swing.JTextField();
        jkKatszerk = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jbAddPenzmozgas = new javax.swing.JButton();
        jbPenzmozTorles = new javax.swing.JButton();
        jbPenzMSzerkeszt = new javax.swing.JButton();
        jbSzukit = new javax.swing.JButton();
        tfTol = new javax.swing.JTextField();
        tfIg = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jbBezar.setBackground(new java.awt.Color(255, 167, 0));
        jbBezar.setText("Bezár");
        jbBezar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBezarActionPerformed(evt);
            }
        });

        jtTablazat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Összeg", "Dátum", "Megjegzés", "Kiadás típusa"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTablazat.setColumnSelectionAllowed(true);
        jtTablazat.setSelectionBackground(new java.awt.Color(52, 203, 134));
        jtTablazat.setShowHorizontalLines(false);
        jtTablazat.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jtTablazat);
        if (jtTablazat.getColumnModel().getColumnCount() > 0) {
            jtTablazat.getColumnModel().getColumn(2).setPreferredWidth(150);
        }

        rbKiad.setText("Kiadások");

        rbBev.setText("Bevételek");

        rbOsszes.setText("Összes pénzmozgás");

        jLabel1.setText("Összes kiadás");

        jLabel2.setText("Összes bevétel");

        jLabel3.setText("Elkölthető összeg");

        jkKatszerk.setText("Kategóriák szerkesztése");
        jkKatszerk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jkKatszerkActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 169, 222));

        jbAddPenzmozgas.setText("Új pénzmozgás");
        jbAddPenzmozgas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddPenzmozgasActionPerformed(evt);
            }
        });

        jbPenzmozTorles.setText("Pénzmozgás törlése");
        jbPenzmozTorles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPenzmozTorlesActionPerformed(evt);
            }
        });

        jbPenzMSzerkeszt.setText("Pénzmozgás szerkesztése");
        jbPenzMSzerkeszt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPenzMSzerkesztActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jbAddPenzmozgas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jbPenzmozTorles)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jbPenzMSzerkeszt)
                        .addGap(22, 22, 22))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbAddPenzmozgas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbPenzmozTorles)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbPenzMSzerkeszt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbSzukit.setText("Szűkit");
        jbSzukit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSzukitActionPerformed(evt);
            }
        });

        jLabel4.setText("-tól");

        jLabel5.setText("-ig");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfTol, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(tfIg, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfOsszkiad, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfOsszbev, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(tfElkOssz, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel5)
                                .addGap(27, 27, 27)
                                .addComponent(jbSzukit)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbBev)
                            .addComponent(rbKiad)
                            .addComponent(rbOsszes)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jkKatszerk))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jbBezar, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {tfIg, tfTol});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(rbKiad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbBev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbOsszes)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jkKatszerk))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfOsszkiad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfOsszbev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfElkOssz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfIg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSzukit)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jbBezar))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBezarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBezarActionPerformed
        try {
            model.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex, "Adatbázis hiba", JOptionPane.ERROR_MESSAGE);
        }
        System.exit(0);
    }//GEN-LAST:event_jbBezarActionPerformed

    private void jbAddPenzmozgasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAddPenzmozgasActionPerformed
        megse = false;
        boolean szerkesztes = false;
        UjPenzmozgas upm = new UjPenzmozgas(this, rootPaneCheckingEnabled, model, penzmozgas, megse, szerkesztes);

        upm.setVisible(true);
        if (upm.isMegse() == false) {
            try {
                model.addPenzmozgas(penzmozgas);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex, "Adatbázis hiba", JOptionPane.ERROR_MESSAGE);
            }
            kiir();
        }
    }//GEN-LAST:event_jbAddPenzmozgasActionPerformed

    private void jkKatszerkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jkKatszerkActionPerformed
        KategoriaSzerkesztes kszt = new KategoriaSzerkesztes(this, true, kategoriak, penzmozgasok, model);
        kszt.setVisible(true);
       
        
        
        
    }//GEN-LAST:event_jkKatszerkActionPerformed

    private void jbPenzmozTorlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPenzmozTorlesActionPerformed
        String torlendoSorok = "";
        int[] rows = jtTablazat.getSelectedRows();
        for (int i = 0; i < rows.length; i++) {

            torlendoSorok = torlendoSorok + penzmozKiirva.get(rows[i]) + "\n";

        }

        UIManager.put("OptionPane.yesButtonText", "Igen");
        UIManager.put("OptionPane.noButtonText", "Nem");

        int valasz = JOptionPane.showConfirmDialog(this, "Biztosan törlöd a következőket: "
                + "\n" + torlendoSorok, "Biztosan törlöd?", JOptionPane.YES_NO_OPTION);

        if (valasz == JOptionPane.YES_OPTION) {
            for (int i = 0; i < rows.length; i++) {

                try {
                    model.removePenzmozgas(penzmozKiirva.get(rows[i]));
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex, "Adatbázis hiba", JOptionPane.ERROR_MESSAGE);
                }
            }

            kiir();
        } else {

        }

    }//GEN-LAST:event_jbPenzmozTorlesActionPerformed

    private void jbSzukitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSzukitActionPerformed

        if (tfIg.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Add meg a dátumokat! :-(", "Hiányzó dátum", JOptionPane.ERROR_MESSAGE);
        } else if (tfTol.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Add meg a dátumokat! :-(", "Hiányzó dátum", JOptionPane.ERROR_MESSAGE);
        } else {
            from = (LocalDate.parse(tfTol.getText()));
            to = (LocalDate.parse(tfIg.getText()));
            kiir();
        }
    }//GEN-LAST:event_jbSzukitActionPerformed

    private void jbPenzMSzerkesztActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPenzMSzerkesztActionPerformed
        /////////////////////////////
        megse = false;
        boolean szerkesztes = true;
        int row = jtTablazat.getSelectedRow();
        if (penzmozKiirva.get(row) != null) {
            penzmozgas = penzmozKiirva.get(row);

            UjPenzmozgas upm = new UjPenzmozgas(this, rootPaneCheckingEnabled, model, penzmozgas, megse, szerkesztes);

            upm.setVisible(true);
            if (upm.isMegse() == false) {
                try {
                    model.updatePenzmozgas(penzmozgas);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex, "Adatbázis hiba", JOptionPane.ERROR_MESSAGE);
                }

                kiir();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Válasz ki egy sort!", "Nincs sor kiválasztva.", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbPenzMSzerkesztActionPerformed

    private void kiir() {
        try {
            penzmozgasok = model.getAllPenzmozgas();

            if (to != null && from != null) {
                List<Integer> torlendo = new ArrayList<>();
                for (int i = 0; i < penzmozgasok.size(); i++) {
                    if (penzmozgasok.get(i).getDatum().isBefore(from)) {
                        torlendo.add(penzmozgasok.get(i).getId());
                    }

                    if (penzmozgasok.get(i).getDatum().isAfter(to)) {
                        torlendo.add(penzmozgasok.get(i).getId());
                    }
                }
                for (int i = 0; i < torlendo.size(); i++) {
                    int torlendoId = torlendo.get(i);

                    for (int j = 0; j < penzmozgasok.size(); j++) {
                        if (torlendoId == penzmozgasok.get(j).getId()) {
                            penzmozgasok.remove(j);
                        }
                    }
                }

            }

            kategoriak = model.getAllKategoria();
            int mostaniAllas = 0;
            int kiadasok = 0;
            int bevetelek = 0;

            penzmozKiirva.clear();
            dtm.getDataVector().clear();

            for (int i = 0; i < penzmozgasok.size(); i++) {
                Vector sor = new Vector();

                int osszeg = penzmozgasok.get(i).getOsszeg();
                String kategoria = "";

                for (int j = 0; j < kategoriak.size(); j++) {
                    if (penzmozgasok.get(i).getIdKategoria() == kategoriak.get(j).getId()) {
                        kategoria = kategoriak.get(j).getNev();
                        if (kategoriak.get(j).getTipus() == 1) {
                            osszeg = osszeg * -1;
                        }
                    }
                }

                sor.add(osszeg);
                sor.add(penzmozgasok.get(i).getDatum());
                sor.add(penzmozgasok.get(i).getMegjegyzes());
                sor.add(kategoria);

                mostaniAllas += osszeg;
                if (osszeg < 0) {
                    kiadasok += osszeg;
                }

                if (osszeg > 0) {
                    bevetelek += osszeg;
                }

                if (rbOsszes.isSelected()) {
                    dtm.addRow(sor);
                    penzmozKiirva.put(i, penzmozgasok.get(i));

                }

                if (rbKiad.isSelected()) {
                    if (osszeg < 0) {
                        dtm.addRow(sor);
                        penzmozKiirva.put(i, penzmozgasok.get(i));
                        mostaniAllas += osszeg;
                    }
                }

                if (rbBev.isSelected()) {
                    if (osszeg > 0) {
                        dtm.addRow(sor);
                        penzmozKiirva.put(i, penzmozgasok.get(i));
                        mostaniAllas += osszeg;
                    }
                }

            }
            dtm.fireTableDataChanged();

            tfElkOssz.setText(String.valueOf(mostaniAllas));
            tfOsszbev.setText(String.valueOf(bevetelek));
            tfOsszkiad.setText(String.valueOf(kiadasok));
            to = null;
            from = null;
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex, "Adatbázis hiba", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Foablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Foablak().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAddPenzmozgas;
    private javax.swing.JButton jbBezar;
    private javax.swing.JButton jbPenzMSzerkeszt;
    private javax.swing.JButton jbPenzmozTorles;
    private javax.swing.JButton jbSzukit;
    private javax.swing.JButton jkKatszerk;
    private javax.swing.JTable jtTablazat;
    private javax.swing.JRadioButton rbBev;
    private javax.swing.ButtonGroup rbGroup;
    private javax.swing.JRadioButton rbKiad;
    private javax.swing.JRadioButton rbOsszes;
    private javax.swing.JTextField tfElkOssz;
    private javax.swing.JTextField tfIg;
    private javax.swing.JTextField tfOsszbev;
    private javax.swing.JTextField tfOsszkiad;
    private javax.swing.JTextField tfTol;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent buttonSelection) {

       if(tfTol.getText().equals("") || tfIg.getText().equals("") ) {
       
           from = null;
        
           to = null;
       }
       
        kiir();
    }
}
